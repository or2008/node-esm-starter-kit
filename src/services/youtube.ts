import YoutubeTranscript from 'youtube-transcript';

import { getGoogleApiKey } from '../config.js';

import { logger, printObject } from './logger.js';
import { get } from './network.js';


interface VideoMetadata {
    'kind': string;
    'etag': string;
    'id': string;
    'snippet': {
        'title': string;
        'description': string;
    };
}

interface VideoChapter {
    thumbnails: [{
        height: number;
        url: string;
        width: number;
    }];
    time: number;
    title: string;
}

interface VideoExtraMetadata {
    'kind': string;
    'etag': string;
    'id': string;
    'items': {
        'chapters': {
            areAutoGenerated: boolean | null;
            chapters: VideoChapter[];
        };
    }[];
}



export async function getVideoChapters(videoId: string) {
    const url = `https://yt.lemnoslife.com/videos?part=chapters&id=${videoId}`;
    const response = await get<VideoExtraMetadata>(url);
    return response.items[0].chapters;
}

interface VideoMetadataResponse {
    'kind': string;
    'etag': string;
    'items': VideoMetadata[];
}

export async function getVideoMetadata(videoId: string) {
    const url = `https://www.googleapis.com/youtube/v3/videos?part=snippet&id=${videoId}&key=${getGoogleApiKey()}`;
    const response = await get<VideoMetadataResponse>(url);
    return response.items[0];
}

export function youtubeUrlParser(url: string) {
    // const regExp = /^.*((youtu.be\/)|(v\/)|(\/u\/\w\/)|(embed\/)|(watch\?))\??v?=?([^#&?]*).*/;

    // const url = https://www.youtube.com/watch?v=-l0aaFvW0T0&ab_channel=SurRonster
    const regExp =
        /(?:https?:\/\/)?(?:w{3}\.)?(?:youtu\.be\/|youtube\.com\/(?:v\/|u\/\w\/|embed\/|shorts\/|watch))(?:(?:\?v=)?([^#&=?]*))?((?:[&?]\w*=\w*)*)/;

    const match = regExp.exec(url);
    if (!match || !match[1] || match[1].length !== 11) return false;
    return match[1];
}

export async function getVideoTranscript(videoId: string, lang = 'en') {
    logger.debug(`[getVideoTranscript] with args ${printObject({ videoId, lang })}`);
    return YoutubeTranscript.default.fetchTranscript(videoId, { lang });
}
